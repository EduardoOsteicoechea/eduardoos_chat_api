name: Deploy to ec2

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
  
      - name: Connect to EC2 instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DNS }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sudo rm -rf /var/cache/nginx/*

            if [ -d "/var/www/html/eduardoos_chat_api" ]; then
              echo "/var/www/html/eduardoos_chat_api exists, removing..."
              sudo rm -r /var/www/html/eduardoos_chat_api
            else
              echo "/var/www/html/eduardoos_chat_api does not exist, skipping removal."
            fi

            cd /var/www/html/
            sudo git clone https://github.com/EduardoOsteicoechea/eduardoos_chat_api.git
            
            if command -v lsof >/dev/null 2>&1; then
              echo "lsof is available, using it to find and kill processes on port 8090..."
              if sudo lsof -ti:8090; then
                echo "Killing processes on port 8090..."
                sudo kill -9 $(sudo lsof -ti:8090)
              else
                echo "No process found listening on port 8090."
              fi
            else
              echo "lsof is not available, using netstat to find and kill processes on port 8090..."
              if sudo netstat -tuln | grep :8090; then
                echo "Killing processes on port 8090..."
                sudo kill -9 $(sudo netstat -tulnp | grep :8090 | awk '{print $7}' | cut -d'/' -f1)
              else
                echo "No process found listening on port 8090."
              fi
            fi

            cd eduardoos_chat_api
            sudo dotnet restore
            sudo dotnet publish -c Release
            cd bin/Release/net8.0/publish 
            sudo screen -dmS eduardoos_chat_api sudo dotnet eduardoos_chatbot_api.dll --urls "https://*:8090"
            sudo systemctl restart nginx
            sudo systemctl reload nginx 

      - name: Wait for deployment
        run: |
          sleep 10